<style lang="less">
.page-section {
  margin-bottom: 20rpx;
}
.section {
  display: block;
  width: 100%;
  padding: 0 20rpx;
  box-sizing: border-box;
  margin-bottom: 20rpx;
  font-size: 16px;
  .section__title {
    font-weight: 700;
  }
}
.flex-wrp {
  display: flex;
  align-items: flex-start;
}
.bc_green {
  background: green;
  width: 100px;
  height: 100px;
}
.bc_red {
  background: red;
  width: 100px;
  height: 100px;
}
.bc_blue {
  background: blue;
  width: 100px;
  height: 100px;
}
.userinfo {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.userinfo-avatar {
  width: 80rpx;
  height: 80rpx;
  border-radius: 50%;
}

.userinfo-nickname {
  color: #aaa;
  max-width: 200rpx;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.form {
  width: 100%;
}
</style>
<template>
  <view class="container">
    <view class="userinfo" @tap="handleViewTap">
      <image class="userinfo-avatar" src="{{ userInfo.avatarUrl }}" background-size="cover"/>
      <view class="userinfo-nickname">{{ userInfo.nickName+'dkfj dkjfkdjfkdj fkdjfkdjfk djfkdjfk djfkdj fkdjf' }}</view>
    </view>
    <form @submit="formSubmit" @reset="formReset" class="form">
      <view class="section section_gap">
        <view class="section__title">switch</view>
        <switch name="switch"/>
      </view>
      <view class="section section_gap">
        <view class="section__title">slider</view>
        <slider name="slider" show-value ></slider>
      </view>

      <view class="section">
        <view class="section__title">input</view>
        <input name="input" placeholder="please input here" />
      </view>

      <view class="section">
        <view class="section__title">textarea</view>
        <textarea auto-height placeholder="自动变高" placeholder-style="color:red;" />
      </view>

      <view class="section section_gap">
        <view class="section__title">radio</view>
        <radio-group name="radio-group">
          <label><radio value="radio1"/>radio1</label>
          <label><radio value="radio2"/>radio2</label>
        </radio-group>
      </view>
      <view class="section section_gap">
        <view class="section__title">checkbox</view>
        <checkbox-group name="checkbox">
          <label><checkbox value="checkbox1"/>checkbox1</label>
          <label><checkbox value="checkbox2"/>checkbox2</label>
        </checkbox-group>
      </view>
      <view class="btn-area">
        <button formType="submit">Submit</button>
        <button formType="reset">Reset</button>
      </view>
    </form>

    <view class="section">
      <view class="section__title">普通选择器</view>
      <picker @change="bindPickerChange" value="{{index}}" range="{{array}}">
        <view class="picker">
          当前选择：{{array[index]}}
        </view>
      </picker>
    </view>
    <view class="section">
      <view class="section__title">多列选择器</view>
      <picker mode="multiSelector" @change="bindMultiPickerChange" @columnchange="bindMultiPickerColumnChange" value="{{multiIndex}}" range="{{multiArray}}">
        <view class="picker">
          当前选择：{{multiArray[0][multiIndex[0]]}}，{{multiArray[1][multiIndex[1]]}}，{{multiArray[2][multiIndex[2]]}}
        </view>
      </picker>
    </view>
    <view class="section">
      <view class="section__title">时间选择器</view>
      <picker mode="time" value="{{time}}" start="09:01" end="21:01" @change="bindTimeChange">
        <view class="picker">
          当前选择: {{time}}
        </view>
      </picker>
    </view>

    <view class="section">
      <view class="section__title">日期选择器</view>
      <picker mode="date" value="{{date}}" start="2015-09-01" end="2017-09-01" @change="bindDateChange">
        <view class="picker">
          当前选择: {{date}}
        </view>
      </picker>
    </view>
    <view class="section">
      <view class="section__title">省市区选择器</view>
      <picker mode="region" @change="bindRegionChange" value="{{region}}" custom-item="{{customItem}}">
        <view class="picker">
          当前选择：{{region[0]}}，{{region[1]}}，{{region[2]}}
        </view>
      </picker>
    </view>

  </view>
</template>

<script>
import wepy from 'wepy';

export default class FormTagsPage extends wepy.page {
  config = {
    navigationBarTitleText: 'Form Tags'
  };
  components = {};
  data = {
    userInfo: {
      nickName: '加载中...'
    },
    array: ['美国', '中国', '巴西', '日本'],
    objectArray: [
      {
        id: 0,
        name: '美国'
      },
      {
        id: 1,
        name: '中国'
      },
      {
        id: 2,
        name: '巴西'
      },
      {
        id: 3,
        name: '日本'
      }
    ],
    index: 0,
    multiArray: [
      ['无脊柱动物', '脊柱动物'],
      ['扁性动物', '线形动物', '环节动物', '软体动物', '节肢动物'],
      ['猪肉绦虫', '吸血虫']
    ],
    objectMultiArray: [
      [
        {
          id: 0,
          name: '无脊柱动物'
        },
        {
          id: 1,
          name: '脊柱动物'
        }
      ],
      [
        {
          id: 0,
          name: '扁性动物'
        },
        {
          id: 1,
          name: '线形动物'
        },
        {
          id: 2,
          name: '环节动物'
        },
        {
          id: 3,
          name: '软体动物'
        },
        {
          id: 3,
          name: '节肢动物'
        }
      ],
      [
        {
          id: 0,
          name: '猪肉绦虫'
        },
        {
          id: 1,
          name: '吸血虫'
        }
      ]
    ],
    multiIndex: [0, 0, 0],
    date: '2016-09-01',
    time: '12:01',
    region: ['广东省', '广州市', '海珠区'],
    customItem: '全部'
  };

  computed = {};

  methods = {
    handleViewTap(e) {
      console.log(e);
    },
    formSubmit(e) {
      console.log('form发生了submit事件，携带数据为：', e.detail.value);
    },
    formReset() {
      console.log('form发生了reset事件');
    },
    bindPickerChange(e) {
      console.log('picker发送选择改变，携带值为', e.detail.value);
      this.index = e.detail.value;
    },
    bindMultiPickerChange(e) {
      console.log('picker发送选择改变，携带值为', e.detail.value);
      this.multiIndex = e.detail.value;
    },
    bindMultiPickerColumnChange(e) {
      console.log('修改的列为', e.detail.column, '，值为', e.detail.value);
      var data = {
        multiArray: this.multiArray,
        multiIndex: this.multiIndex
      };
      data.multiIndex[e.detail.column] = e.detail.value;
      switch (e.detail.column) {
        case 0:
          switch (data.multiIndex[0]) {
            case 0:
              data.multiArray[1] = [
                '扁性动物',
                '线形动物',
                '环节动物',
                '软体动物',
                '节肢动物'
              ];
              data.multiArray[2] = ['猪肉绦虫', '吸血虫'];
              break;
            case 1:
              data.multiArray[1] = ['鱼', '两栖动物', '爬行动物'];
              data.multiArray[2] = ['鲫鱼', '带鱼'];
              break;
          }
          data.multiIndex[1] = 0;
          data.multiIndex[2] = 0;
          break;
        case 1:
          switch (data.multiIndex[0]) {
            case 0:
              switch (data.multiIndex[1]) {
                case 0:
                  data.multiArray[2] = ['猪肉绦虫', '吸血虫'];
                  break;
                case 1:
                  data.multiArray[2] = ['蛔虫'];
                  break;
                case 2:
                  data.multiArray[2] = ['蚂蚁', '蚂蟥'];
                  break;
                case 3:
                  data.multiArray[2] = ['河蚌', '蜗牛', '蛞蝓'];
                  break;
                case 4:
                  data.multiArray[2] = [
                    '昆虫',
                    '甲壳动物',
                    '蛛形动物',
                    '多足动物'
                  ];
                  break;
              }
              break;
            case 1:
              switch (data.multiIndex[1]) {
                case 0:
                  data.multiArray[2] = ['鲫鱼', '带鱼'];
                  break;
                case 1:
                  data.multiArray[2] = ['青蛙', '娃娃鱼'];
                  break;
                case 2:
                  data.multiArray[2] = ['蜥蜴', '龟', '壁虎'];
                  break;
              }
              break;
          }
          data.multiIndex[2] = 0;
          console.log(data.multiIndex);
          break;
      }
      this.multiArray = data.multiArray;
      this.multiIndex = data.multiIndex;
    },
    bindDateChange(e) {
      console.log('picker发送选择改变，携带值为', e.detail.value);
      this.date = e.detail.value;
    },
    bindTimeChange(e) {
      console.log('picker发送选择改变，携带值为', e.detail.value);
      this.time = e.detail.value;
    },
    bindRegionChange(e) {
      console.log('picker发送选择改变，携带值为', e.detail.value);
      this.region = e.detail.value;
    }
  };

  events = {};

  onLoad() {
    let self = this;
    console.log(self);
    if (this.$parent.globalData.userInfo) {
      self.userInfo = this.$parent.globalData.userInfo;
      self.$apply();
    }
  }
}
</script>
